<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
    <mvc:annotation-driven/>
    
    <context:component-scan base-package="com.lhfeiyu.action" />
    
    <mvc:resources mapping="/css/**" location="/css/"/>  
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/views/**" location="/views/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/lib/**" location="/lib/"/>
    <mvc:resources mapping="/third-party/**" location="/third-party/"/>
    <mvc:resources mapping="/file/**" location="/file/"/>
    <mvc:resources mapping="/temp/**" location="/temp/"/>
	<mvc:default-servlet-handler/>
	<!-- 作用是当servlet在找不到需要的文件时会去找对应的静态内容,其实resources不用配置 -->
	<!-- spring mvc -->
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 <property name="prefix" value="/views/" />
         <property name="suffix" value=".jsp" />
         <property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	
	<!--
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
	    <property name="resourceLoaderPath">  
	        <value>/views/</value>  
	    </property>  
	    <property name="velocityProperties">  
		   <props>  
		    <prop key="input.encoding">utf-8</prop>  
		    <prop key="output.encoding">utf-8</prop>  
		    <prop key="contentType">text/html;charset=utf-8</prop>  
		   </props>  
	    </property>  
	</bean> 
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">  
	    <property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /> 
		<property name="viewClass" value="com.lhfeiyu.util.VelocityToolbox20View" />  
		<property name="contentType"><value>text/html;charset=UTF-8</value></property>
	</bean>  
	-->
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过2014KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="1024000000"/>  
    </bean>  
      
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->  
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">index</prop>  
            </props>  
        </property>  
    </bean>  
		
</beans>